{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Theme",
  "type": "object",
  "properties": {
    "id": {
      "default": "@unknown/unknown",
      "allOf": [
        {
          "$ref": "#/definitions/ThemeId"
        }
      ]
    },
    "metadata": {
      "description": "Metadata about the theme",
      "default": {
        "appTargetVersion": null,
        "banner": null,
        "bundled": false,
        "description": {},
        "displayName": {},
        "filename": "",
        "portrait": null,
        "screenshots": [],
        "tags": []
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceMetadata"
        }
      ]
    },
    "settings": {
      "default": [],
      "allOf": [
        {
          "$ref": "#/definitions/ThemeSettingsDefinition"
        }
      ]
    },
    "styles": {
      "description": "Css Styles of the theme",
      "default": {},
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  },
  "definitions": {
    "ResourceId": {
      "description": "visual id composed of the creator username and the resource name",
      "type": "string"
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "appTargetVersion": {
          "description": "App target version that this resource is compatible with.\\ Developers are responsible to update the resource so when resource does not match the current app version, the resource will be shown with a warning message",
          "default": null,
          "type": [
            "array",
            "null"
          ],
          "items": [
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          ],
          "maxItems": 3,
          "minItems": 3
        },
        "banner": {
          "description": "Banner image with aspect ratio of 21/9, this is used when promoting the resource.",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "format": "uri"
        },
        "bundled": {
          "description": "internal field that indicates if the resource is bundled",
          "default": false,
          "readOnly": true,
          "type": "boolean"
        },
        "description": {
          "description": "Map of language code to description. Could be a string, mapped to `en`.",
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/ResourceText"
            }
          ]
        },
        "displayName": {
          "description": "Map of language code to display name. Could be a string, mapped to `en`.",
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/ResourceText"
            }
          ]
        },
        "filename": {
          "description": "internal field used by the app on load of the resource",
          "default": "",
          "readOnly": true,
          "type": "string"
        },
        "portrait": {
          "description": "Portrait image with aspect ratio of 1/1",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "format": "uri"
        },
        "screenshots": {
          "description": "Screenshots should use aspect ratio of 16/9",
          "default": [],
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tags": {
          "description": "tags are keywords to be used for searching and indexing",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceText": {
      "description": "Map of language code as key an translated values. Could be a string, mapped to `en`.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "ThemeId": {
      "$ref": "#/definitions/ResourceId"
    },
    "ThemeSettingsDefinition": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ThemeVariableDefinition"
      }
    },
    "ThemeVariableDefinition": {
      "oneOf": [
        {
          "description": "This config definition will allow to users write any string.\\ Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/string \\ ### example: ```css --var-name: \"user input\" ```",
          "type": "object",
          "required": [
            "initialValue",
            "label",
            "name",
            "syntax"
          ],
          "properties": {
            "initialValue": {
              "description": "initial variable value, if not manually set by the user.",
              "type": "string"
            },
            "label": {
              "description": "Label to show to the user on Settings.",
              "allOf": [
                {
                  "$ref": "#/definitions/ResourceText"
                }
              ]
            },
            "name": {
              "description": "Css variable name, example: `--my-css-variable`",
              "type": "string"
            },
            "syntax": {
              "type": "string",
              "enum": [
                "<string>"
              ]
            }
          }
        },
        {
          "description": "This config definition will allow to users select a color and will be stored as a hex value, opacity is always allowed via UI.\\ Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value \\ ### example: ```css --var-name: #ff22ee --var-name: #ff22ee ```",
          "type": "object",
          "required": [
            "initialValue",
            "label",
            "name",
            "syntax"
          ],
          "properties": {
            "initialValue": {
              "description": "initial variable value, if not manually set by the user.",
              "type": "string"
            },
            "label": {
              "description": "Label to show to the user on Settings.",
              "allOf": [
                {
                  "$ref": "#/definitions/ResourceText"
                }
              ]
            },
            "name": {
              "description": "Css variable name, example: `--my-css-variable`",
              "type": "string"
            },
            "syntax": {
              "type": "string",
              "enum": [
                "<color>"
              ]
            }
          }
        },
        {
          "description": "This will allow to the user set any lenght in any unit. (px, %, vw, etc). If you need force a specific unit, use Number instead lenght and on theme code makes the conversion.\\ Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/length \\ ### example: ```css --var-name: 10px --var-name: 10% --var-name: 10vw ```",
          "type": "object",
          "required": [
            "initialValue",
            "initialValueUnit",
            "label",
            "name",
            "syntax"
          ],
          "properties": {
            "initialValue": {
              "description": "initial variable value, if not manually set by the user.",
              "type": "number",
              "format": "double"
            },
            "initialValueUnit": {
              "description": "Css unit, example: `px`",
              "type": "string"
            },
            "label": {
              "description": "Label to show to the user on Settings.",
              "allOf": [
                {
                  "$ref": "#/definitions/ResourceText"
                }
              ]
            },
            "name": {
              "description": "Css variable name, example: `--my-css-variable`",
              "type": "string"
            },
            "syntax": {
              "type": "string",
              "enum": [
                "<length>"
              ]
            }
          }
        },
        {
          "description": "This will allow to users to set any number, without units. Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/number \\ ### example: ```css --var-name: 10 ```",
          "type": "object",
          "required": [
            "initialValue",
            "label",
            "name",
            "syntax"
          ],
          "properties": {
            "initialValue": {
              "description": "initial variable value, if not manually set by the user.",
              "type": "number",
              "format": "double"
            },
            "label": {
              "description": "Label to show to the user on Settings.",
              "allOf": [
                {
                  "$ref": "#/definitions/ResourceText"
                }
              ]
            },
            "name": {
              "description": "Css variable name, example: `--my-css-variable`",
              "type": "string"
            },
            "syntax": {
              "type": "string",
              "enum": [
                "<number>"
              ]
            }
          }
        },
        {
          "description": "This will allow to users to set any url.\\ Css syntax: https://developer.mozilla.org/en-US/docs/Web/CSS/url_value \\ ### example: ```css --var-name: url(\"https://example.com/image.png\") ```",
          "type": "object",
          "required": [
            "initialValue",
            "label",
            "name",
            "syntax"
          ],
          "properties": {
            "initialValue": {
              "description": "initial variable value, if not manually set by the user.",
              "type": "string",
              "format": "uri"
            },
            "label": {
              "description": "Label to show to the user on Settings.",
              "allOf": [
                {
                  "$ref": "#/definitions/ResourceText"
                }
              ]
            },
            "name": {
              "description": "Css variable name, example: `--my-css-variable`",
              "type": "string"
            },
            "syntax": {
              "type": "string",
              "enum": [
                "<url>"
              ]
            }
          }
        }
      ]
    }
  }
}
