// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { StyleValue } from './StyleValue.ts';

export type PowerToolbarItem = {
  /**
   * Id to identify the item, should be unique.
   */
  id: string;
  /**
   * Content to display in the item.
   *
   * Should follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).
   *
   * ## Power Item Scope
   * ```ts
   * interface PowerStatus {
   *     acLineStatus: number;
   *     batteryFlag: number;
   *     batteryLifePercent: number;
   *     systemStatusFlag: number;
   *     batteryLifeTime: number;
   *     batteryFullLifeTime: number;
   * }
   *
   * interface Battery {
   *     // Static info
   *     vendor: string | null;
   *     model: string | null;
   *     serialNumber: string | null;
   *     technology: string;
   *
   *     // Common information
   *     state: string;
   *     capacity: number;
   *     temperature: number | null;
   *     percentage: number;
   *     cycleCount: number | null;
   *     smartCharging: boolean;
   *
   *     // Energy stats
   *     energy: number;
   *     energyFull: number;
   *     energyFullDesign: number;
   *     energyRate: number;
   *     voltage: number;
   *
   *     // Charge stats
   *     timeToFull: number | null;
   *     timeToEmpty: number | null;
   * }
   *
   * const power: PowerStatus;
   * const batteries: Battery[];
   * const battery: Battery | null;
   * ```
   */
  template: string;
  /**
   * Content to display in tooltip of the item.
   *
   * Should follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).
   *
   * ## Power Item Scope
   * ```ts
   * interface PowerStatus {
   *     acLineStatus: number;
   *     batteryFlag: number;
   *     batteryLifePercent: number;
   *     systemStatusFlag: number;
   *     batteryLifeTime: number;
   *     batteryFullLifeTime: number;
   * }
   *
   * interface Battery {
   *     // Static info
   *     vendor: string | null;
   *     model: string | null;
   *     serialNumber: string | null;
   *     technology: string;
   *
   *     // Common information
   *     state: string;
   *     capacity: number;
   *     temperature: number | null;
   *     percentage: number;
   *     cycleCount: number | null;
   *     smartCharging: boolean;
   *
   *     // Energy stats
   *     energy: number;
   *     energyFull: number;
   *     energyFullDesign: number;
   *     energyRate: number;
   *     voltage: number;
   *
   *     // Charge stats
   *     timeToFull: number | null;
   *     timeToEmpty: number | null;
   * }
   *
   * const power: PowerStatus;
   * const batteries: Battery[];
   * const battery: Battery | null;
   * ```
   */
  tooltip: string | null;
  /**
   * Badge will be displayed over the item, useful as notifications.
   *
   * Should follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).
   *
   * ## Power Item Scope
   * ```ts
   * interface PowerStatus {
   *     acLineStatus: number;
   *     batteryFlag: number;
   *     batteryLifePercent: number;
   *     systemStatusFlag: number;
   *     batteryLifeTime: number;
   *     batteryFullLifeTime: number;
   * }
   *
   * interface Battery {
   *     // Static info
   *     vendor: string | null;
   *     model: string | null;
   *     serialNumber: string | null;
   *     technology: string;
   *
   *     // Common information
   *     state: string;
   *     capacity: number;
   *     temperature: number | null;
   *     percentage: number;
   *     cycleCount: number | null;
   *     smartCharging: boolean;
   *
   *     // Energy stats
   *     energy: number;
   *     energyFull: number;
   *     energyFullDesign: number;
   *     energyRate: number;
   *     voltage: number;
   *
   *     // Charge stats
   *     timeToFull: number | null;
   *     timeToEmpty: number | null;
   * }
   *
   * const power: PowerStatus;
   * const batteries: Battery[];
   * const battery: Battery | null;
   * ```
   */
  badge: string | null;
  /**
   * Deprecated use `onClickV2` instead.
   */
  onClick: string | null;
  /**
   * This code will be parsed and executed when the item is clicked.
   *
   * Should follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).
   *
   * ## Power Item Scope
   * ```ts
   * interface PowerStatus {
   *     acLineStatus: number;
   *     batteryFlag: number;
   *     batteryLifePercent: number;
   *     systemStatusFlag: number;
   *     batteryLifeTime: number;
   *     batteryFullLifeTime: number;
   * }
   *
   * interface Battery {
   *     // Static info
   *     vendor: string | null;
   *     model: string | null;
   *     serialNumber: string | null;
   *     technology: string;
   *
   *     // Common information
   *     state: string;
   *     capacity: number;
   *     temperature: number | null;
   *     percentage: number;
   *     cycleCount: number | null;
   *     smartCharging: boolean;
   *
   *     // Energy stats
   *     energy: number;
   *     energyFull: number;
   *     energyFullDesign: number;
   *     energyRate: number;
   *     voltage: number;
   *
   *     // Charge stats
   *     timeToFull: number | null;
   *     timeToEmpty: number | null;
   * }
   *
   * const power: PowerStatus;
   * const batteries: Battery[];
   * const battery: Battery | null;
   * ```
   */
  onClickV2: string | null;
  /**
   * Styles to be added to the item. This follow the same interface of React's `style` prop.
   */
  style: { [key in string]?: StyleValue | null };
};
